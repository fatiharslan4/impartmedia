#!/bin/bash

function show_help {
  echo "help!"
}
## Defaults
debug=false

while [[ $1 == -* ]]; do
    case "$1" in
      -h|--help|-\?) show_help; exit 0;;
      -c|--container) container=1; shift;;
      --clean) clean=true; shift;;
      -d|--debug) debug=true; shift;;
      --) shift; break;;
      -*) echo "invalid option: $1" 1>&2; show_help; exit 1;;
    esac
done


function setup_env {
  export IMPART_ENV="local"
  export IMPART_DEBUG=${debug}
  export IMPART_PORT="8080"
  export IMPART_API_KEY="38c31c4a79c04fd102e105f23a7cdcf832e40ad1b1a526ba82da9fe1f86aa5aab288a3f1a85f5edf39478d65c05c6f1328c82de7e1677ca31a4392ab"
  export IMPART_REGION="us-east-2"
  export IMPART_DYNAMO_ENDPOINT="http://localhost:8000"
  export IMPART_IOS_NOTIFICATION_ARN="arn:aws:sns:us-east-1:518740895671:app/APNS_SANDBOX/impart_wealth_dev"
  export IMPART_PROFILE_SCHEMA_PATH="./schemas/json/Profile.json"
  export AWS_ACCESS_KEY_ID=dummy
  export AWS_SECRET_ACCESS_KEY=dummy
  export IMPART_DB_HOST=localhost
  export IMPART_DB_PORT=3306
  export IMPART_DB_NAME=impart
  export IMPART_DB_MIGRATION_USERNAME=impart_super
  export IMPART_DB_MIGRATION_PASSWORD=supersecretpassword
  export IMPART_DB_USERNAME=impart_crud
  export IMPART_DB_PASSWORD=supersecretpassword
  export IMPART_ALLOW_ORIGIN="http://localhost:3000"
  export IMPART_MAILCHIMP_APIKEY="a09260bb88705e937e4972542ad756bf-us5"
  export IMPART_MAILCHIMP_AUDIENCE_ID="705f6263fd"
  export IMPART_PLAID_CLIENT_ID="6136f385219f3b0010085168"
  export IMPART_PLAID_SECRET="6fae35ee0ce476ebb02f7dbee199e4"
  export IMPART_AUTH_DOMAIN="impartwealth.auth0.com"
  export IMPART_AUTH0_MANAGEMENT_CLIENT="wK78yrI3H2CSoWr0iscR5lItcZdjcLBA"
  export IMPART_AUTH0_MANAGEMENT_CLIENT_SECRET="X3bXip3IZTQcLRoYIQ5VkMfSQdqcSZdJtdZpQd8w5-D22wK3vCt5HjMBo3Et93cJ"
}

if [[ $(docker ps -q --filter "name=backend_mysql_1" --filter "health=healthy" | wc -l | xargs) -ne 1 ]]; then
  clean=true
fi

setup_env

if [[ "${clean}" == "true" ]]; then
  docker-compose down -v --remove-orphans > /dev/null
  docker-compose rm -f -v  > /dev/null
  docker-compose up -d bootstrap-mysql
fi

if [[ "${container}" -eq 1 ]]; then
    docker-compose build
    docker wait backend_bootstrap > /dev/null
    docker-compose up backend
    exit 0
fi


go build -o impart-backend cmd/server/main.go


echo "waiting on local create tables..."
docker wait backend_bootstrap-mysql_1 > /dev/null
./impart-backend
